global !p

def create_matrix(snip):
	rows = snip.buffer[snip.line].split('x')[0]
	cols = snip.buffer[snip.line].split('x')[1]
	int_val = lambda string: int(''.join(s for s in string if s.isdigit()))
	rows = int_val(rows)
	cols = int_val(cols)
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	snip.buffer[snip.line] = ''
	final_str = old_spacing + "\\begin{bmatrix}\n"
	for i in range(rows):
		final_str += old_spacing + '\t'
		final_str += " & ".join(['$' + str(i * cols + j + 1) for j in range(cols)])
		final_str += " \\\\\\\n"
	final_str += old_spacing + "\\end{bmatrix}\n$0"
	snip.expand_anon(final_str)

endglobal

# smart matrix
pre_expand "create_matrix(snip)"
snippet "mat(\d+)x(\d+)" "Generate matrix of *rows* by *cols*" r
endsnippet

# Augmented Matrix
snippet aug
\\left[\\hspace{-5pt}\\begin{array}{${1:cc}|${2:c}}
	${0:${VISUAL}}
\\end{array}\\hspace{-5pt}\\right]
endsnippet

# smart augmented matrix
pre_expand "create_augmented_matrix(snip)"
snippet "aug(\d+)x(\d+)" "Generate augmented matrix of *rows* by *cols*" r
endsnippet

# Inline Math Environment
snippet mi 
\$${1:${VISUAL}}\$$0
endsnippet

# Math Environment
snippet mt
\\[
	${0:${VISUAL}}
\\]
endsnippet

# Right Arrow
snippet to
\\to $0
endsnippet


# Article Template
snippet art
\\documentclass[a4paper,12pt]{article}

\\usepackage{blindtext}
\\usepackage{mathptmx}
\\usepackage{graphicx}
\\usepackage{enumitem}
\\usepackage{amsmath}
\\usepackage{amsfonts}
\\usepackage{array}
\\usepackage[margin=1in]{geometry}
\\usepackage{listings}
\\usepackage{framed}
\\usepackage[framed]{ntheorem}
\\usepackage{pgfplots}
\\usepackage{float}
\\pgfplotsset{compat=newest}

\\theoremstyle{nonumberplain}
\\newframedtheorem{frm-thm}{Definition}
\\newframedtheorem{frm-tht}{Note}

\\setlength{\parindent}{0em}
\\setlength{\parskip}{1em}

\\graphicspath{{./}}

\\begin{document}

\\title{$1}
\\author{Hayden Johnson}
\\maketitle

\\subsection*{$2}
$0

\\end{document}
endsnippet
